using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
 //Generated on 2013/6/18 20:31:45 by Administrator
// <auto-generated />
namespace Eleooo.DAL
{
	/// <summary>
	/// This is an ActiveRecord class which wraps the Orders_Detail table.
	/// </summary>
	[Serializable]
	public partial class OrdersDetailSchema : TableSchema.Table
	{
        public static TableSchema.Table Schema
        {
            get
            {
                return new OrdersDetailSchema();
            }
        }
		#region .ctors and Default Settings
		
		public OrdersDetailSchema()
            :base("Orders_Detail")
		{
		}
		
		#endregion
		
		#region Schema and Query Accessor	
		
		protected override void Initital() 
        {
			//Schema define
			this.Columns = new TableSchema.TableColumnCollection();
			this.SchemaName = @"dbo";
            this.TableType = TableType.Table;
			//columns
			
			TableSchema.TableColumn colvarId = new TableSchema.TableColumn(this);
			colvarId.ColumnName = "ID";
			colvarId.DataType = DbType.Int32;
			colvarId.MaxLength = 0;
			colvarId.AutoIncrement = true;
			colvarId.IsNullable = false;
			colvarId.IsPrimaryKey = true;
			colvarId.IsForeignKey = false;
			colvarId.IsReadOnly = false;
                
			colvarId.DefaultSetting = @"";
			colvarId.ForeignKeyTableName = "";
            colvarId.ApplyExtendedProperties();
			this.Columns.Add(colvarId);
			
			TableSchema.TableColumn colvarMenuId = new TableSchema.TableColumn(this);
			colvarMenuId.ColumnName = "MenuId";
			colvarMenuId.DataType = DbType.Int32;
			colvarMenuId.MaxLength = 0;
			colvarMenuId.AutoIncrement = false;
			colvarMenuId.IsNullable = true;
			colvarMenuId.IsPrimaryKey = false;
			colvarMenuId.IsForeignKey = false;
			colvarMenuId.IsReadOnly = false;
                
			colvarMenuId.DefaultSetting = @"";
			colvarMenuId.ForeignKeyTableName = "";
            colvarMenuId.ApplyExtendedProperties();
			this.Columns.Add(colvarMenuId);
			
			TableSchema.TableColumn colvarMenuName = new TableSchema.TableColumn(this);
			colvarMenuName.ColumnName = "MenuName";
			colvarMenuName.DataType = DbType.String;
			colvarMenuName.MaxLength = -1;
			colvarMenuName.AutoIncrement = false;
			colvarMenuName.IsNullable = true;
			colvarMenuName.IsPrimaryKey = false;
			colvarMenuName.IsForeignKey = false;
			colvarMenuName.IsReadOnly = false;
                
			colvarMenuName.DefaultSetting = @"";
			colvarMenuName.ForeignKeyTableName = "";
            colvarMenuName.ApplyExtendedProperties();
			this.Columns.Add(colvarMenuName);
			
			TableSchema.TableColumn colvarOrderId = new TableSchema.TableColumn(this);
			colvarOrderId.ColumnName = "OrderId";
			colvarOrderId.DataType = DbType.Int32;
			colvarOrderId.MaxLength = 0;
			colvarOrderId.AutoIncrement = false;
			colvarOrderId.IsNullable = true;
			colvarOrderId.IsPrimaryKey = false;
			colvarOrderId.IsForeignKey = false;
			colvarOrderId.IsReadOnly = false;
                
			colvarOrderId.DefaultSetting = @"";
			colvarOrderId.ForeignKeyTableName = "";
            colvarOrderId.ApplyExtendedProperties();
			this.Columns.Add(colvarOrderId);
			
			TableSchema.TableColumn colvarOrderQty = new TableSchema.TableColumn(this);
			colvarOrderQty.ColumnName = "OrderQty";
			colvarOrderQty.DataType = DbType.Int32;
			colvarOrderQty.MaxLength = 0;
			colvarOrderQty.AutoIncrement = false;
			colvarOrderQty.IsNullable = true;
			colvarOrderQty.IsPrimaryKey = false;
			colvarOrderQty.IsForeignKey = false;
			colvarOrderQty.IsReadOnly = false;
                
			colvarOrderQty.DefaultSetting = @"";
			colvarOrderQty.ForeignKeyTableName = "";
            colvarOrderQty.ApplyExtendedProperties();
			this.Columns.Add(colvarOrderQty);
			
			TableSchema.TableColumn colvarOrderPrice = new TableSchema.TableColumn(this);
			colvarOrderPrice.ColumnName = "OrderPrice";
			colvarOrderPrice.DataType = DbType.Decimal;
			colvarOrderPrice.MaxLength = 0;
			colvarOrderPrice.AutoIncrement = false;
			colvarOrderPrice.IsNullable = true;
			colvarOrderPrice.IsPrimaryKey = false;
			colvarOrderPrice.IsForeignKey = false;
			colvarOrderPrice.IsReadOnly = false;
                
			colvarOrderPrice.DefaultSetting = @"";
			colvarOrderPrice.ForeignKeyTableName = "";
            colvarOrderPrice.ApplyExtendedProperties();
			this.Columns.Add(colvarOrderPrice);
			
			TableSchema.TableColumn colvarIsChgPrice = new TableSchema.TableColumn(this);
			colvarIsChgPrice.ColumnName = "IsChgPrice";
			colvarIsChgPrice.DataType = DbType.Boolean;
			colvarIsChgPrice.MaxLength = 0;
			colvarIsChgPrice.AutoIncrement = false;
			colvarIsChgPrice.IsNullable = true;
			colvarIsChgPrice.IsPrimaryKey = false;
			colvarIsChgPrice.IsForeignKey = false;
			colvarIsChgPrice.IsReadOnly = false;
                
			colvarIsChgPrice.DefaultSetting = @"";
			colvarIsChgPrice.ForeignKeyTableName = "";
            colvarIsChgPrice.ApplyExtendedProperties();
			this.Columns.Add(colvarIsChgPrice);
			
			TableSchema.TableColumn colvarIsOutOfStock = new TableSchema.TableColumn(this);
			colvarIsOutOfStock.ColumnName = "IsOutOfStock";
			colvarIsOutOfStock.DataType = DbType.Boolean;
			colvarIsOutOfStock.MaxLength = 0;
			colvarIsOutOfStock.AutoIncrement = false;
			colvarIsOutOfStock.IsNullable = true;
			colvarIsOutOfStock.IsPrimaryKey = false;
			colvarIsOutOfStock.IsForeignKey = false;
			colvarIsOutOfStock.IsReadOnly = false;
                
			colvarIsOutOfStock.DefaultSetting = @"";
			colvarIsOutOfStock.ForeignKeyTableName = "";
            colvarIsOutOfStock.ApplyExtendedProperties();
			this.Columns.Add(colvarIsOutOfStock);
			
			TableSchema.TableColumn colvarItemInfo = new TableSchema.TableColumn(this);
			colvarItemInfo.ColumnName = "ItemInfo";
			colvarItemInfo.DataType = DbType.String;
			colvarItemInfo.MaxLength = -1;
			colvarItemInfo.AutoIncrement = false;
			colvarItemInfo.IsNullable = true;
			colvarItemInfo.IsPrimaryKey = false;
			colvarItemInfo.IsForeignKey = false;
			colvarItemInfo.IsReadOnly = false;
                
			colvarItemInfo.DefaultSetting = @"";
			colvarItemInfo.ForeignKeyTableName = "";
            colvarItemInfo.ApplyExtendedProperties();
			this.Columns.Add(colvarItemInfo);
			
		}
		#endregion
	}
}