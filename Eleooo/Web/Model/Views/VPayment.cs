using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL{
    /// <summary>
    /// Strongly-typed collection for the VPayment class.
    /// </summary>
    [Serializable]
    public partial class VPaymentCollection : ReadOnlyList<VPayment, VPaymentCollection>
    {        
        public VPaymentCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the v_Payment view.
    /// </summary>
    [Serializable]
    public partial class VPayment : ReadOnlyRecord<VPayment>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    BaseSchema = DB.GetSchema("v_Payment");
                }
                return BaseSchema;
            }
        }
    	
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VPayment()
	    {
            //SetDefaults();
            //MarkNew(); 
            if(BaseSchema ==null) 
                BaseSchema = DB.GetSchema("v_Payment");
        }
        public VPayment(bool useDatabaseDefaults)
	    { 
            if(BaseSchema == null)
                BaseSchema = DB.GetSchema("v_Payment");
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			//MarkNew();
	    }
	    
	    public VPayment(object keyID)
	    { 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("v_Payment");
		    LoadByKey(keyID);
	    }
    	 
	    public VPayment(string columnName, object columnValue)
        { 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("v_Payment");
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PaymentCompanyID")]
        [Bindable(true)]
        public int? PaymentCompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PaymentCompanyID");
		    }
            set 
		    {
			    SetColumnValue("PaymentCompanyID", value);
            }
        }
	      
        [XmlAttribute("PaymentMemberID")]
        [Bindable(true)]
        public int? PaymentMemberID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PaymentMemberID");
		    }
            set 
		    {
			    SetColumnValue("PaymentMemberID", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PaymentDate");
		    }
            set 
		    {
			    SetColumnValue("PaymentDate", value);
            }
        }
	      
        [XmlAttribute("OrderRateSale")]
        [Bindable(true)]
        public decimal? OrderRateSale 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("OrderRateSale");
		    }
            set 
		    {
			    SetColumnValue("OrderRateSale", value);
            }
        }
	    
	    #endregion 
        #region Typed Columns
        
        public static TableSchema.TableColumn
        PaymentCompanyIDColumn { get { return Schema.Columns[0]; } }
        
        public static TableSchema.TableColumn
        PaymentMemberIDColumn { get { return Schema.Columns[1]; } }
        
        public static TableSchema.TableColumn
        PaymentDateColumn { get { return Schema.Columns[2]; } }
        
        public static TableSchema.TableColumn
        OrderRateSaleColumn { get { return Schema.Columns[3]; } }
        
        #endregion #region Columns Struct    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PaymentCompanyID = @"PaymentCompanyID";
            
            public static string PaymentMemberID = @"PaymentMemberID";
            
            public static string PaymentDate = @"PaymentDate";
            
            public static string OrderRateSale = @"OrderRateSale";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
