using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
	/// <summary>
	/// Strongly-typed collection for the SysCompany class.
	/// </summary>
    [Serializable]
	public partial class SysCompanyCollection : ActiveList<SysCompany, SysCompanyCollection>
	{	   
		public SysCompanyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysCompanyCollection</returns>
		public SysCompanyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysCompany o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_Company table.
	/// </summary>
	[Serializable]
	public partial class SysCompany : ActiveRecord<SysCompany>, IActiveRecord
	{
		#region .ctors and Default Settings
		static SysCompany( )
        {
            BaseSchema = DB.GetSchema("Sys_Company");
        }
		public SysCompany()
		{
		  //InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysCompany(bool useDatabaseDefaults)
		{ 
            if(BaseSchema == null)
                BaseSchema = DB.GetSchema("Sys_Company");
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysCompany(object keyID)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Company");
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysCompany(string columnName, object columnValue)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Company");
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
                {
                    BaseSchema = DB.GetSchema("Sys_Company");
                }
				return BaseSchema;
			}
		}
		
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("CompanyCode")]
		[Bindable(true)]
		public string CompanyCode 
		{
			get { return GetColumnValue<string>(Columns.CompanyCode); }
			set { SetColumnValue(Columns.CompanyCode, value); }
		}
		  
		[XmlAttribute("CompanyName")]
		[Bindable(true)]
		public string CompanyName 
		{
			get { return GetColumnValue<string>(Columns.CompanyName); }
			set { SetColumnValue(Columns.CompanyName, value); }
		}
		  
		[XmlAttribute("CompanyPwd")]
		[Bindable(true)]
		public string CompanyPwd 
		{
			get { return GetColumnValue<string>(Columns.CompanyPwd); }
			set { SetColumnValue(Columns.CompanyPwd, value); }
		}
		  
		[XmlAttribute("CompanyEmail")]
		[Bindable(true)]
		public string CompanyEmail 
		{
			get { return GetColumnValue<string>(Columns.CompanyEmail); }
			set { SetColumnValue(Columns.CompanyEmail, value); }
		}
		  
		[XmlAttribute("CompanyProvince")]
		[Bindable(true)]
		public string CompanyProvince 
		{
			get { return GetColumnValue<string>(Columns.CompanyProvince); }
			set { SetColumnValue(Columns.CompanyProvince, value); }
		}
		  
		[XmlAttribute("CompanyCity")]
		[Bindable(true)]
		public int? CompanyCity 
		{
			get { return GetColumnValue<int?>(Columns.CompanyCity); }
			set { SetColumnValue(Columns.CompanyCity, value); }
		}
		  
		[XmlAttribute("CompanyArea")]
		[Bindable(true)]
		public string CompanyArea 
		{
			get { return GetColumnValue<string>(Columns.CompanyArea); }
			set { SetColumnValue(Columns.CompanyArea, value); }
		}
		  
		[XmlAttribute("CompanyLocation")]
		[Bindable(true)]
		public string CompanyLocation 
		{
			get { return GetColumnValue<string>(Columns.CompanyLocation); }
			set { SetColumnValue(Columns.CompanyLocation, value); }
		}
		  
		[XmlAttribute("AreaDepth")]
		[Bindable(true)]
		public string AreaDepth 
		{
			get { return GetColumnValue<string>(Columns.AreaDepth); }
			set { SetColumnValue(Columns.AreaDepth, value); }
		}
		  
		[XmlAttribute("CompanyAddress")]
		[Bindable(true)]
		public string CompanyAddress 
		{
			get { return GetColumnValue<string>(Columns.CompanyAddress); }
			set { SetColumnValue(Columns.CompanyAddress, value); }
		}
		  
		[XmlAttribute("CompanyTel")]
		[Bindable(true)]
		public string CompanyTel 
		{
			get { return GetColumnValue<string>(Columns.CompanyTel); }
			set { SetColumnValue(Columns.CompanyTel, value); }
		}
		  
		[XmlAttribute("CompanyPhone")]
		[Bindable(true)]
		public string CompanyPhone 
		{
			get { return GetColumnValue<string>(Columns.CompanyPhone); }
			set { SetColumnValue(Columns.CompanyPhone, value); }
		}
		  
		[XmlAttribute("CompanyMsn")]
		[Bindable(true)]
		public string CompanyMsn 
		{
			get { return GetColumnValue<string>(Columns.CompanyMsn); }
			set { SetColumnValue(Columns.CompanyMsn, value); }
		}
		  
		[XmlAttribute("CompanySkype")]
		[Bindable(true)]
		public string CompanySkype 
		{
			get { return GetColumnValue<string>(Columns.CompanySkype); }
			set { SetColumnValue(Columns.CompanySkype, value); }
		}
		  
		[XmlAttribute("CompanyPhoto")]
		[Bindable(true)]
		public string CompanyPhoto 
		{
			get { return GetColumnValue<string>(Columns.CompanyPhoto); }
			set { SetColumnValue(Columns.CompanyPhoto, value); }
		}
		  
		[XmlAttribute("CompanyIntro")]
		[Bindable(true)]
		public string CompanyIntro 
		{
			get { return GetColumnValue<string>(Columns.CompanyIntro); }
			set { SetColumnValue(Columns.CompanyIntro, value); }
		}
		  
		[XmlAttribute("CompanyContent")]
		[Bindable(true)]
		public string CompanyContent 
		{
			get { return GetColumnValue<string>(Columns.CompanyContent); }
			set { SetColumnValue(Columns.CompanyContent, value); }
		}
		  
		[XmlAttribute("IsUseFinger")]
		[Bindable(true)]
		public bool? IsUseFinger 
		{
			get { return GetColumnValue<bool?>(Columns.IsUseFinger); }
			set { SetColumnValue(Columns.IsUseFinger, value); }
		}
		  
		[XmlAttribute("CompanyDate")]
		[Bindable(true)]
		public DateTime? CompanyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.CompanyDate); }
			set { SetColumnValue(Columns.CompanyDate, value); }
		}
		  
		[XmlAttribute("CompanyDateView")]
		[Bindable(true)]
		public DateTime? CompanyDateView 
		{
			get { return GetColumnValue<DateTime?>(Columns.CompanyDateView); }
			set { SetColumnValue(Columns.CompanyDateView, value); }
		}
		  
		[XmlAttribute("CompanyStatus")]
		[Bindable(true)]
		public int? CompanyStatus 
		{
			get { return GetColumnValue<int?>(Columns.CompanyStatus); }
			set { SetColumnValue(Columns.CompanyStatus, value); }
		}
		  
		[XmlAttribute("CompanyMemo")]
		[Bindable(true)]
		public string CompanyMemo 
		{
			get { return GetColumnValue<string>(Columns.CompanyMemo); }
			set { SetColumnValue(Columns.CompanyMemo, value); }
		}
		  
		[XmlAttribute("CompanyRate")]
		[Bindable(true)]
		public string CompanyRate 
		{
			get { return GetColumnValue<string>(Columns.CompanyRate); }
			set { SetColumnValue(Columns.CompanyRate, value); }
		}
		  
		[XmlAttribute("CompanyRateSale")]
		[Bindable(true)]
		public string CompanyRateSale 
		{
			get { return GetColumnValue<string>(Columns.CompanyRateSale); }
			set { SetColumnValue(Columns.CompanyRateSale, value); }
		}
		  
		[XmlAttribute("CompanyRateMaster")]
		[Bindable(true)]
		public decimal? CompanyRateMaster 
		{
			get { return GetColumnValue<decimal?>(Columns.CompanyRateMaster); }
			set { SetColumnValue(Columns.CompanyRateMaster, value); }
		}
		  
		[XmlAttribute("CompanySaleCount")]
		[Bindable(true)]
		public int? CompanySaleCount 
		{
			get { return GetColumnValue<int?>(Columns.CompanySaleCount); }
			set { SetColumnValue(Columns.CompanySaleCount, value); }
		}
		  
		[XmlAttribute("CompanySaleSum")]
		[Bindable(true)]
		public decimal? CompanySaleSum 
		{
			get { return GetColumnValue<decimal?>(Columns.CompanySaleSum); }
			set { SetColumnValue(Columns.CompanySaleSum, value); }
		}
		  
		[XmlAttribute("CompanyBalance")]
		[Bindable(true)]
		public decimal? CompanyBalance 
		{
			get { return GetColumnValue<decimal?>(Columns.CompanyBalance); }
			set { SetColumnValue(Columns.CompanyBalance, value); }
		}
		  
		[XmlAttribute("CompanyBalanceCash")]
		[Bindable(true)]
		public decimal? CompanyBalanceCash 
		{
			get { return GetColumnValue<decimal?>(Columns.CompanyBalanceCash); }
			set { SetColumnValue(Columns.CompanyBalanceCash, value); }
		}
		  
		[XmlAttribute("CompanyFacebookCount")]
		[Bindable(true)]
		public int? CompanyFacebookCount 
		{
			get { return GetColumnValue<int?>(Columns.CompanyFacebookCount); }
			set { SetColumnValue(Columns.CompanyFacebookCount, value); }
		}
		  
		[XmlAttribute("CompanyToken")]
		[Bindable(true)]
		public string CompanyToken 
		{
			get { return GetColumnValue<string>(Columns.CompanyToken); }
			set { SetColumnValue(Columns.CompanyToken, value); }
		}
		  
		[XmlAttribute("CompanyType")]
		[Bindable(true)]
		public int? CompanyType 
		{
			get { return GetColumnValue<int?>(Columns.CompanyType); }
			set { SetColumnValue(Columns.CompanyType, value); }
		}
		  
		[XmlAttribute("CompanyItem")]
		[Bindable(true)]
		public string CompanyItem 
		{
			get { return GetColumnValue<string>(Columns.CompanyItem); }
			set { SetColumnValue(Columns.CompanyItem, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public int? CreatedBy 
		{
			get { return GetColumnValue<int?>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("CreatedOn")]
		[Bindable(true)]
		public DateTime? CreatedOn 
		{
			get { return GetColumnValue<DateTime?>(Columns.CreatedOn); }
			set { SetColumnValue(Columns.CreatedOn, value); }
		}
		  
		[XmlAttribute("ModifiedBy")]
		[Bindable(true)]
		public int? ModifiedBy 
		{
			get { return GetColumnValue<int?>(Columns.ModifiedBy); }
			set { SetColumnValue(Columns.ModifiedBy, value); }
		}
		  
		[XmlAttribute("ModifiedOn")]
		[Bindable(true)]
		public DateTime? ModifiedOn 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifiedOn); }
			set { SetColumnValue(Columns.ModifiedOn, value); }
		}
		  
		[XmlAttribute("CompanyWorkTime")]
		[Bindable(true)]
		public string CompanyWorkTime 
		{
			get { return GetColumnValue<string>(Columns.CompanyWorkTime); }
			set { SetColumnValue(Columns.CompanyWorkTime, value); }
		}
		  
		[XmlAttribute("CompanyServices")]
		[Bindable(true)]
		public string CompanyServices 
		{
			get { return GetColumnValue<string>(Columns.CompanyServices); }
			set { SetColumnValue(Columns.CompanyServices, value); }
		}
		  
		[XmlAttribute("MsnPhoneNum")]
		[Bindable(true)]
		public string MsnPhoneNum 
		{
			get { return GetColumnValue<string>(Columns.MsnPhoneNum); }
			set { SetColumnValue(Columns.MsnPhoneNum, value); }
		}
		  
		[XmlAttribute("OrderElapsed")]
		[Bindable(true)]
		public string OrderElapsed 
		{
			get { return GetColumnValue<string>(Columns.OrderElapsed); }
			set { SetColumnValue(Columns.OrderElapsed, value); }
		}
		  
		[XmlAttribute("OrderMaxAmount")]
		[Bindable(true)]
		public int? OrderMaxAmount 
		{
			get { return GetColumnValue<int?>(Columns.OrderMaxAmount); }
			set { SetColumnValue(Columns.OrderMaxAmount, value); }
		}
		  
		[XmlAttribute("IsUseMsg")]
		[Bindable(true)]
		public bool? IsUseMsg 
		{
			get { return GetColumnValue<bool?>(Columns.IsUseMsg); }
			set { SetColumnValue(Columns.IsUseMsg, value); }
		}
		  
		[XmlAttribute("OnSetSum")]
		[Bindable(true)]
		public decimal? OnSetSum 
		{
			get { return GetColumnValue<decimal?>(Columns.OnSetSum); }
			set { SetColumnValue(Columns.OnSetSum, value); }
		}
		  
		[XmlAttribute("ServiceSum")]
		[Bindable(true)]
		public decimal? ServiceSum 
		{
			get { return GetColumnValue<decimal?>(Columns.ServiceSum); }
			set { SetColumnValue(Columns.ServiceSum, value); }
		}
		  
		[XmlAttribute("MenuDate")]
		[Bindable(true)]
		public DateTime? MenuDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.MenuDate); }
			set { SetColumnValue(Columns.MenuDate, value); }
		}
		  
		[XmlAttribute("SetTopDate")]
		[Bindable(true)]
		public DateTime? SetTopDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SetTopDate); }
			set { SetColumnValue(Columns.SetTopDate, value); }
		}
		  
		[XmlAttribute("IsPoint")]
		[Bindable(true)]
		public bool? IsPoint 
		{
			get { return GetColumnValue<bool?>(Columns.IsPoint); }
			set { SetColumnValue(Columns.IsPoint, value); }
		}
		  
		[XmlAttribute("IsOnSale")]
		[Bindable(true)]
		public bool? IsOnSale 
		{
			get { return GetColumnValue<bool?>(Columns.IsOnSale); }
			set { SetColumnValue(Columns.IsOnSale, value); }
		}
		  
		[XmlAttribute("IsSuspend")]
		[Bindable(true)]
		public bool? IsSuspend 
		{
			get { return GetColumnValue<bool?>(Columns.IsSuspend); }
			set { SetColumnValue(Columns.IsSuspend, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varCompanyCode,string varCompanyName,string varCompanyPwd,string varCompanyEmail,string varCompanyProvince,int? varCompanyCity,string varCompanyArea,string varCompanyLocation,string varAreaDepth,string varCompanyAddress,string varCompanyTel,string varCompanyPhone,string varCompanyMsn,string varCompanySkype,string varCompanyPhoto,string varCompanyIntro,string varCompanyContent,bool? varIsUseFinger,DateTime? varCompanyDate,DateTime? varCompanyDateView,int? varCompanyStatus,string varCompanyMemo,string varCompanyRate,string varCompanyRateSale,decimal? varCompanyRateMaster,int? varCompanySaleCount,decimal? varCompanySaleSum,decimal? varCompanyBalance,decimal? varCompanyBalanceCash,int? varCompanyFacebookCount,string varCompanyToken,int? varCompanyType,string varCompanyItem,int? varCreatedBy,DateTime? varCreatedOn,int? varModifiedBy,DateTime? varModifiedOn,string varCompanyWorkTime,string varCompanyServices,string varMsnPhoneNum,string varOrderElapsed,int? varOrderMaxAmount,bool? varIsUseMsg,decimal? varOnSetSum,decimal? varServiceSum,DateTime? varMenuDate,DateTime? varSetTopDate,bool? varIsPoint,bool? varIsOnSale,bool? varIsSuspend)
		{
			SysCompany item = new SysCompany();
			
			item.CompanyCode = varCompanyCode;
			
			item.CompanyName = varCompanyName;
			
			item.CompanyPwd = varCompanyPwd;
			
			item.CompanyEmail = varCompanyEmail;
			
			item.CompanyProvince = varCompanyProvince;
			
			item.CompanyCity = varCompanyCity;
			
			item.CompanyArea = varCompanyArea;
			
			item.CompanyLocation = varCompanyLocation;
			
			item.AreaDepth = varAreaDepth;
			
			item.CompanyAddress = varCompanyAddress;
			
			item.CompanyTel = varCompanyTel;
			
			item.CompanyPhone = varCompanyPhone;
			
			item.CompanyMsn = varCompanyMsn;
			
			item.CompanySkype = varCompanySkype;
			
			item.CompanyPhoto = varCompanyPhoto;
			
			item.CompanyIntro = varCompanyIntro;
			
			item.CompanyContent = varCompanyContent;
			
			item.IsUseFinger = varIsUseFinger;
			
			item.CompanyDate = varCompanyDate;
			
			item.CompanyDateView = varCompanyDateView;
			
			item.CompanyStatus = varCompanyStatus;
			
			item.CompanyMemo = varCompanyMemo;
			
			item.CompanyRate = varCompanyRate;
			
			item.CompanyRateSale = varCompanyRateSale;
			
			item.CompanyRateMaster = varCompanyRateMaster;
			
			item.CompanySaleCount = varCompanySaleCount;
			
			item.CompanySaleSum = varCompanySaleSum;
			
			item.CompanyBalance = varCompanyBalance;
			
			item.CompanyBalanceCash = varCompanyBalanceCash;
			
			item.CompanyFacebookCount = varCompanyFacebookCount;
			
			item.CompanyToken = varCompanyToken;
			
			item.CompanyType = varCompanyType;
			
			item.CompanyItem = varCompanyItem;
			
			item.CreatedBy = varCreatedBy;
			
			item.CreatedOn = varCreatedOn;
			
			item.ModifiedBy = varModifiedBy;
			
			item.ModifiedOn = varModifiedOn;
			
			item.CompanyWorkTime = varCompanyWorkTime;
			
			item.CompanyServices = varCompanyServices;
			
			item.MsnPhoneNum = varMsnPhoneNum;
			
			item.OrderElapsed = varOrderElapsed;
			
			item.OrderMaxAmount = varOrderMaxAmount;
			
			item.IsUseMsg = varIsUseMsg;
			
			item.OnSetSum = varOnSetSum;
			
			item.ServiceSum = varServiceSum;
			
			item.MenuDate = varMenuDate;
			
			item.SetTopDate = varSetTopDate;
			
			item.IsPoint = varIsPoint;
			
			item.IsOnSale = varIsOnSale;
			
			item.IsSuspend = varIsSuspend;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varCompanyCode,string varCompanyName,string varCompanyPwd,string varCompanyEmail,string varCompanyProvince,int? varCompanyCity,string varCompanyArea,string varCompanyLocation,string varAreaDepth,string varCompanyAddress,string varCompanyTel,string varCompanyPhone,string varCompanyMsn,string varCompanySkype,string varCompanyPhoto,string varCompanyIntro,string varCompanyContent,bool? varIsUseFinger,DateTime? varCompanyDate,DateTime? varCompanyDateView,int? varCompanyStatus,string varCompanyMemo,string varCompanyRate,string varCompanyRateSale,decimal? varCompanyRateMaster,int? varCompanySaleCount,decimal? varCompanySaleSum,decimal? varCompanyBalance,decimal? varCompanyBalanceCash,int? varCompanyFacebookCount,string varCompanyToken,int? varCompanyType,string varCompanyItem,int? varCreatedBy,DateTime? varCreatedOn,int? varModifiedBy,DateTime? varModifiedOn,string varCompanyWorkTime,string varCompanyServices,string varMsnPhoneNum,string varOrderElapsed,int? varOrderMaxAmount,bool? varIsUseMsg,decimal? varOnSetSum,decimal? varServiceSum,DateTime? varMenuDate,DateTime? varSetTopDate,bool? varIsPoint,bool? varIsOnSale,bool? varIsSuspend)
		{
			SysCompany item = new SysCompany();
			
				item.Id = varId;
			
				item.CompanyCode = varCompanyCode;
			
				item.CompanyName = varCompanyName;
			
				item.CompanyPwd = varCompanyPwd;
			
				item.CompanyEmail = varCompanyEmail;
			
				item.CompanyProvince = varCompanyProvince;
			
				item.CompanyCity = varCompanyCity;
			
				item.CompanyArea = varCompanyArea;
			
				item.CompanyLocation = varCompanyLocation;
			
				item.AreaDepth = varAreaDepth;
			
				item.CompanyAddress = varCompanyAddress;
			
				item.CompanyTel = varCompanyTel;
			
				item.CompanyPhone = varCompanyPhone;
			
				item.CompanyMsn = varCompanyMsn;
			
				item.CompanySkype = varCompanySkype;
			
				item.CompanyPhoto = varCompanyPhoto;
			
				item.CompanyIntro = varCompanyIntro;
			
				item.CompanyContent = varCompanyContent;
			
				item.IsUseFinger = varIsUseFinger;
			
				item.CompanyDate = varCompanyDate;
			
				item.CompanyDateView = varCompanyDateView;
			
				item.CompanyStatus = varCompanyStatus;
			
				item.CompanyMemo = varCompanyMemo;
			
				item.CompanyRate = varCompanyRate;
			
				item.CompanyRateSale = varCompanyRateSale;
			
				item.CompanyRateMaster = varCompanyRateMaster;
			
				item.CompanySaleCount = varCompanySaleCount;
			
				item.CompanySaleSum = varCompanySaleSum;
			
				item.CompanyBalance = varCompanyBalance;
			
				item.CompanyBalanceCash = varCompanyBalanceCash;
			
				item.CompanyFacebookCount = varCompanyFacebookCount;
			
				item.CompanyToken = varCompanyToken;
			
				item.CompanyType = varCompanyType;
			
				item.CompanyItem = varCompanyItem;
			
				item.CreatedBy = varCreatedBy;
			
				item.CreatedOn = varCreatedOn;
			
				item.ModifiedBy = varModifiedBy;
			
				item.ModifiedOn = varModifiedOn;
			
				item.CompanyWorkTime = varCompanyWorkTime;
			
				item.CompanyServices = varCompanyServices;
			
				item.MsnPhoneNum = varMsnPhoneNum;
			
				item.OrderElapsed = varOrderElapsed;
			
				item.OrderMaxAmount = varOrderMaxAmount;
			
				item.IsUseMsg = varIsUseMsg;
			
				item.OnSetSum = varOnSetSum;
			
				item.ServiceSum = varServiceSum;
			
				item.MenuDate = varMenuDate;
			
				item.SetTopDate = varSetTopDate;
			
				item.IsPoint = varIsPoint;
			
				item.IsOnSale = varIsOnSale;
			
				item.IsSuspend = varIsSuspend;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyCodeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyNameColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyPwdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyEmailColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyProvinceColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyCityColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyAreaColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyLocationColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn AreaDepthColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyAddressColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyTelColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyPhoneColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyMsnColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanySkypeColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyPhotoColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyIntroColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyContentColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn IsUseFingerColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyDateColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyDateViewColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyStatusColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyMemoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyRateColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyRateSaleColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyRateMasterColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanySaleCountColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanySaleSumColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyBalanceColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyBalanceCashColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyFacebookCountColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyTokenColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyTypeColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyItemColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedOnColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedByColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedOnColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyWorkTimeColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn CompanyServicesColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn MsnPhoneNumColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderElapsedColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderMaxAmountColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn IsUseMsgColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn OnSetSumColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn ServiceSumColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn MenuDateColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn SetTopDateColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPointColumn
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn IsOnSaleColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        public static TableSchema.TableColumn IsSuspendColumn
        {
            get { return Schema.Columns[50]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string CompanyCode = @"CompanyCode";
			 public static string CompanyName = @"CompanyName";
			 public static string CompanyPwd = @"CompanyPwd";
			 public static string CompanyEmail = @"CompanyEmail";
			 public static string CompanyProvince = @"CompanyProvince";
			 public static string CompanyCity = @"CompanyCity";
			 public static string CompanyArea = @"CompanyArea";
			 public static string CompanyLocation = @"CompanyLocation";
			 public static string AreaDepth = @"AreaDepth";
			 public static string CompanyAddress = @"CompanyAddress";
			 public static string CompanyTel = @"CompanyTel";
			 public static string CompanyPhone = @"CompanyPhone";
			 public static string CompanyMsn = @"CompanyMsn";
			 public static string CompanySkype = @"CompanySkype";
			 public static string CompanyPhoto = @"CompanyPhoto";
			 public static string CompanyIntro = @"CompanyIntro";
			 public static string CompanyContent = @"CompanyContent";
			 public static string IsUseFinger = @"IsUseFinger";
			 public static string CompanyDate = @"CompanyDate";
			 public static string CompanyDateView = @"CompanyDateView";
			 public static string CompanyStatus = @"CompanyStatus";
			 public static string CompanyMemo = @"CompanyMemo";
			 public static string CompanyRate = @"CompanyRate";
			 public static string CompanyRateSale = @"CompanyRateSale";
			 public static string CompanyRateMaster = @"CompanyRateMaster";
			 public static string CompanySaleCount = @"CompanySaleCount";
			 public static string CompanySaleSum = @"CompanySaleSum";
			 public static string CompanyBalance = @"CompanyBalance";
			 public static string CompanyBalanceCash = @"CompanyBalanceCash";
			 public static string CompanyFacebookCount = @"CompanyFacebookCount";
			 public static string CompanyToken = @"CompanyToken";
			 public static string CompanyType = @"CompanyType";
			 public static string CompanyItem = @"CompanyItem";
			 public static string CreatedBy = @"CreatedBy";
			 public static string CreatedOn = @"CreatedOn";
			 public static string ModifiedBy = @"ModifiedBy";
			 public static string ModifiedOn = @"ModifiedOn";
			 public static string CompanyWorkTime = @"CompanyWorkTime";
			 public static string CompanyServices = @"CompanyServices";
			 public static string MsnPhoneNum = @"MsnPhoneNum";
			 public static string OrderElapsed = @"OrderElapsed";
			 public static string OrderMaxAmount = @"OrderMaxAmount";
			 public static string IsUseMsg = @"IsUseMsg";
			 public static string OnSetSum = @"OnSetSum";
			 public static string ServiceSum = @"ServiceSum";
			 public static string MenuDate = @"MenuDate";
			 public static string SetTopDate = @"SetTopDate";
			 public static string IsPoint = @"IsPoint";
			 public static string IsOnSale = @"IsOnSale";
			 public static string IsSuspend = @"IsSuspend";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
