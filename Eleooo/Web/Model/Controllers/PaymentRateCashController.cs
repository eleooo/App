using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
    /// <summary>
    /// Controller class for PaymentRateCash
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class PaymentRateCashController
    {
        // Preload our schema..
        PaymentRateCash thisSchemaLoad = new PaymentRateCash();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public PaymentRateCashCollection FetchAll()
        {
            PaymentRateCashCollection coll = new PaymentRateCashCollection();
            Query qry = new Query(PaymentRateCash.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public PaymentRateCashCollection FetchByID(object PaymentRateCashID)
        {
            PaymentRateCashCollection coll = new PaymentRateCashCollection().Where("PaymentRateCashID", PaymentRateCashID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public PaymentRateCashCollection FetchByQuery(Query qry)
        {
            PaymentRateCashCollection coll = new PaymentRateCashCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PaymentRateCashID)
        {
            return (PaymentRateCash.Delete(PaymentRateCashID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PaymentRateCashID)
        {
            return (PaymentRateCash.Destroy(PaymentRateCashID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(DateTime? PaymentRateCashDate,DateTime? PaymentRateCashDateStart,DateTime? PaymentRateCashDateEnd,int? PaymentRateCashCompanyID,decimal? PaymentRateCash1,decimal? PaymentRateCash2,decimal? PaymentRateCashSum,string PaymentRateCashMemo,int? PaymentRateCashStatus,int? CreatedBy,DateTime? CreatedOn,int? ModifiedBy,DateTime? ModifiedOn)
	    {
		    PaymentRateCash item = new PaymentRateCash();
		    
            item.PaymentRateCashDate = PaymentRateCashDate;
            
            item.PaymentRateCashDateStart = PaymentRateCashDateStart;
            
            item.PaymentRateCashDateEnd = PaymentRateCashDateEnd;
            
            item.PaymentRateCashCompanyID = PaymentRateCashCompanyID;
            
            item.PaymentRateCash1 = PaymentRateCash1;
            
            item.PaymentRateCash2 = PaymentRateCash2;
            
            item.PaymentRateCashSum = PaymentRateCashSum;
            
            item.PaymentRateCashMemo = PaymentRateCashMemo;
            
            item.PaymentRateCashStatus = PaymentRateCashStatus;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedOn = ModifiedOn;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int PaymentRateCashID,DateTime? PaymentRateCashDate,DateTime? PaymentRateCashDateStart,DateTime? PaymentRateCashDateEnd,int? PaymentRateCashCompanyID,decimal? PaymentRateCash1,decimal? PaymentRateCash2,decimal? PaymentRateCashSum,string PaymentRateCashMemo,int? PaymentRateCashStatus,int? CreatedBy,DateTime? CreatedOn,int? ModifiedBy,DateTime? ModifiedOn)
	    {
		    PaymentRateCash item = new PaymentRateCash();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PaymentRateCashID = PaymentRateCashID;
				
			item.PaymentRateCashDate = PaymentRateCashDate;
				
			item.PaymentRateCashDateStart = PaymentRateCashDateStart;
				
			item.PaymentRateCashDateEnd = PaymentRateCashDateEnd;
				
			item.PaymentRateCashCompanyID = PaymentRateCashCompanyID;
				
			item.PaymentRateCash1 = PaymentRateCash1;
				
			item.PaymentRateCash2 = PaymentRateCash2;
				
			item.PaymentRateCashSum = PaymentRateCashSum;
				
			item.PaymentRateCashMemo = PaymentRateCashMemo;
				
			item.PaymentRateCashStatus = PaymentRateCashStatus;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedOn = ModifiedOn;
				
	        item.Save(UserName);
	    }
    }
}
