using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
    /// <summary>
    /// Controller class for Sys_Support
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SysSupportController
    {
        // Preload our schema..
        SysSupport thisSchemaLoad = new SysSupport();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SysSupportCollection FetchAll()
        {
            SysSupportCollection coll = new SysSupportCollection();
            Query qry = new Query(SysSupport.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysSupportCollection FetchByID(object SupportId)
        {
            SysSupportCollection coll = new SysSupportCollection().Where("Support_ID", SupportId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysSupportCollection FetchByQuery(Query qry)
        {
            SysSupportCollection coll = new SysSupportCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object SupportId)
        {
            return (SysSupport.Delete(SupportId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object SupportId)
        {
            return (SysSupport.Destroy(SupportId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int SupportFid,int SupportTid,int SupportItem,int SupportType,int SupportProductID,string SupportSubject,string SupportContent,string SupportAttach,string SupportPhoto,bool SupportIsRead,int? SupportRating,string SupportRatingReason,int SupportStatus,DateTime SupportDate,DateTime? SupportDateReply,DateTime? SupportDateFinish,int? CreatedBy,DateTime? CreatedOn,int? ModifiedBy,DateTime? ModifiedOn)
	    {
		    SysSupport item = new SysSupport();
		    
            item.SupportFid = SupportFid;
            
            item.SupportTid = SupportTid;
            
            item.SupportItem = SupportItem;
            
            item.SupportType = SupportType;
            
            item.SupportProductID = SupportProductID;
            
            item.SupportSubject = SupportSubject;
            
            item.SupportContent = SupportContent;
            
            item.SupportAttach = SupportAttach;
            
            item.SupportPhoto = SupportPhoto;
            
            item.SupportIsRead = SupportIsRead;
            
            item.SupportRating = SupportRating;
            
            item.SupportRatingReason = SupportRatingReason;
            
            item.SupportStatus = SupportStatus;
            
            item.SupportDate = SupportDate;
            
            item.SupportDateReply = SupportDateReply;
            
            item.SupportDateFinish = SupportDateFinish;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedOn = ModifiedOn;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int SupportId,int SupportFid,int SupportTid,int SupportItem,int SupportType,int SupportProductID,string SupportSubject,string SupportContent,string SupportAttach,string SupportPhoto,bool SupportIsRead,int? SupportRating,string SupportRatingReason,int SupportStatus,DateTime SupportDate,DateTime? SupportDateReply,DateTime? SupportDateFinish,int? CreatedBy,DateTime? CreatedOn,int? ModifiedBy,DateTime? ModifiedOn)
	    {
		    SysSupport item = new SysSupport();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.SupportId = SupportId;
				
			item.SupportFid = SupportFid;
				
			item.SupportTid = SupportTid;
				
			item.SupportItem = SupportItem;
				
			item.SupportType = SupportType;
				
			item.SupportProductID = SupportProductID;
				
			item.SupportSubject = SupportSubject;
				
			item.SupportContent = SupportContent;
				
			item.SupportAttach = SupportAttach;
				
			item.SupportPhoto = SupportPhoto;
				
			item.SupportIsRead = SupportIsRead;
				
			item.SupportRating = SupportRating;
				
			item.SupportRatingReason = SupportRatingReason;
				
			item.SupportStatus = SupportStatus;
				
			item.SupportDate = SupportDate;
				
			item.SupportDateReply = SupportDateReply;
				
			item.SupportDateFinish = SupportDateFinish;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedOn = ModifiedOn;
				
	        item.Save(UserName);
	    }
    }
}
