using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
    /// <summary>
    /// Controller class for Sys_Company_Item
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SysCompanyItemController
    {
        // Preload our schema..
        SysCompanyItem thisSchemaLoad = new SysCompanyItem();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SysCompanyItemCollection FetchAll()
        {
            SysCompanyItemCollection coll = new SysCompanyItemCollection();
            Query qry = new Query(SysCompanyItem.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysCompanyItemCollection FetchByID(object ItemID)
        {
            SysCompanyItemCollection coll = new SysCompanyItemCollection().Where("ItemID", ItemID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysCompanyItemCollection FetchByQuery(Query qry)
        {
            SysCompanyItemCollection coll = new SysCompanyItemCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ItemID)
        {
            return (SysCompanyItem.Delete(ItemID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ItemID)
        {
            return (SysCompanyItem.Destroy(ItemID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string ItemTitle,string ItemIntro,string ItemContent,string ItemTips,int CompanyID,int? ItemAmount,decimal? ItemSum,decimal? ItemPoint,int? ItemClicked,int? ItemUsed,string ItemPic,string ItemPic1,string ItemPic2,string ItemAddr,DateTime? ItemDate,DateTime? ItemEndDate,decimal? OrderSumLimit,int? MemberLimit,int? ItemLimit,string AreaDepth,bool? IsDeleted,bool? IsPass,int? IsCanDel,string ItemPic3,string ItemPic4,string ItemPic5,string ItemPic6,string ItemPic7,string ItemInfo,string WorkingHours,bool? ItemStatus,int? OrderFreqLimit,decimal? ItemNeedPay)
	    {
		    SysCompanyItem item = new SysCompanyItem();
		    
            item.ItemTitle = ItemTitle;
            
            item.ItemIntro = ItemIntro;
            
            item.ItemContent = ItemContent;
            
            item.ItemTips = ItemTips;
            
            item.CompanyID = CompanyID;
            
            item.ItemAmount = ItemAmount;
            
            item.ItemSum = ItemSum;
            
            item.ItemPoint = ItemPoint;
            
            item.ItemClicked = ItemClicked;
            
            item.ItemUsed = ItemUsed;
            
            item.ItemPic = ItemPic;
            
            item.ItemPic1 = ItemPic1;
            
            item.ItemPic2 = ItemPic2;
            
            item.ItemAddr = ItemAddr;
            
            item.ItemDate = ItemDate;
            
            item.ItemEndDate = ItemEndDate;
            
            item.OrderSumLimit = OrderSumLimit;
            
            item.MemberLimit = MemberLimit;
            
            item.ItemLimit = ItemLimit;
            
            item.AreaDepth = AreaDepth;
            
            item.IsDeleted = IsDeleted;
            
            item.IsPass = IsPass;
            
            item.IsCanDel = IsCanDel;
            
            item.ItemPic3 = ItemPic3;
            
            item.ItemPic4 = ItemPic4;
            
            item.ItemPic5 = ItemPic5;
            
            item.ItemPic6 = ItemPic6;
            
            item.ItemPic7 = ItemPic7;
            
            item.ItemInfo = ItemInfo;
            
            item.WorkingHours = WorkingHours;
            
            item.ItemStatus = ItemStatus;
            
            item.OrderFreqLimit = OrderFreqLimit;
            
            item.ItemNeedPay = ItemNeedPay;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int ItemID,string ItemTitle,string ItemIntro,string ItemContent,string ItemTips,int CompanyID,int? ItemAmount,decimal? ItemSum,decimal? ItemPoint,int? ItemClicked,int? ItemUsed,string ItemPic,string ItemPic1,string ItemPic2,string ItemAddr,DateTime? ItemDate,DateTime? ItemEndDate,decimal? OrderSumLimit,int? MemberLimit,int? ItemLimit,string AreaDepth,bool? IsDeleted,bool? IsPass,int? IsCanDel,string ItemPic3,string ItemPic4,string ItemPic5,string ItemPic6,string ItemPic7,string ItemInfo,string WorkingHours,bool? ItemStatus,int? OrderFreqLimit,decimal? ItemNeedPay)
	    {
		    SysCompanyItem item = new SysCompanyItem();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ItemID = ItemID;
				
			item.ItemTitle = ItemTitle;
				
			item.ItemIntro = ItemIntro;
				
			item.ItemContent = ItemContent;
				
			item.ItemTips = ItemTips;
				
			item.CompanyID = CompanyID;
				
			item.ItemAmount = ItemAmount;
				
			item.ItemSum = ItemSum;
				
			item.ItemPoint = ItemPoint;
				
			item.ItemClicked = ItemClicked;
				
			item.ItemUsed = ItemUsed;
				
			item.ItemPic = ItemPic;
				
			item.ItemPic1 = ItemPic1;
				
			item.ItemPic2 = ItemPic2;
				
			item.ItemAddr = ItemAddr;
				
			item.ItemDate = ItemDate;
				
			item.ItemEndDate = ItemEndDate;
				
			item.OrderSumLimit = OrderSumLimit;
				
			item.MemberLimit = MemberLimit;
				
			item.ItemLimit = ItemLimit;
				
			item.AreaDepth = AreaDepth;
				
			item.IsDeleted = IsDeleted;
				
			item.IsPass = IsPass;
				
			item.IsCanDel = IsCanDel;
				
			item.ItemPic3 = ItemPic3;
				
			item.ItemPic4 = ItemPic4;
				
			item.ItemPic5 = ItemPic5;
				
			item.ItemPic6 = ItemPic6;
				
			item.ItemPic7 = ItemPic7;
				
			item.ItemInfo = ItemInfo;
				
			item.WorkingHours = WorkingHours;
				
			item.ItemStatus = ItemStatus;
				
			item.OrderFreqLimit = OrderFreqLimit;
				
			item.ItemNeedPay = ItemNeedPay;
				
	        item.Save(UserName);
	    }
    }
}
