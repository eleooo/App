using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
 //Generated on 2013/6/25 0:29:51 by Administrator
// <auto-generated />
namespace Eleooo.DAL
{
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_Notes table.
	/// </summary>
	[Serializable]
	public partial class SysNoteSchema : TableSchema.Table
	{
        public static TableSchema.Table Schema
        {
            get
            {
                return new SysNoteSchema();
            }
        }
		#region .ctors and Default Settings
		
		public SysNoteSchema()
            :base("Sys_Notes")
		{
		}
		
		#endregion
		
		#region Schema and Query Accessor	
		
		protected override void Initital() 
        {
			//Schema define
			this.Columns = new TableSchema.TableColumnCollection();
			this.SchemaName = @"dbo";
            this.TableType = TableType.Table;
			//columns
			
			TableSchema.TableColumn colvarId = new TableSchema.TableColumn(this);
			colvarId.ColumnName = "ID";
			colvarId.DataType = DbType.Int32;
			colvarId.MaxLength = 0;
			colvarId.AutoIncrement = true;
			colvarId.IsNullable = false;
			colvarId.IsPrimaryKey = true;
			colvarId.IsForeignKey = false;
			colvarId.IsReadOnly = false;
                
			colvarId.DefaultSetting = @"";
			colvarId.ForeignKeyTableName = "";
            colvarId.ApplyExtendedProperties();
			this.Columns.Add(colvarId);
			
			TableSchema.TableColumn colvarNoteSubject = new TableSchema.TableColumn(this);
			colvarNoteSubject.ColumnName = "NoteSubject";
			colvarNoteSubject.DataType = DbType.String;
			colvarNoteSubject.MaxLength = 250;
			colvarNoteSubject.AutoIncrement = false;
			colvarNoteSubject.IsNullable = false;
			colvarNoteSubject.IsPrimaryKey = false;
			colvarNoteSubject.IsForeignKey = false;
			colvarNoteSubject.IsReadOnly = false;
                
			colvarNoteSubject.DefaultSetting = @"";
			colvarNoteSubject.ForeignKeyTableName = "";
            colvarNoteSubject.ApplyExtendedProperties();
			this.Columns.Add(colvarNoteSubject);
			
			TableSchema.TableColumn colvarNoteContent = new TableSchema.TableColumn(this);
			colvarNoteContent.ColumnName = "NoteContent";
			colvarNoteContent.DataType = DbType.String;
			colvarNoteContent.MaxLength = 1073741823;
			colvarNoteContent.AutoIncrement = false;
			colvarNoteContent.IsNullable = true;
			colvarNoteContent.IsPrimaryKey = false;
			colvarNoteContent.IsForeignKey = false;
			colvarNoteContent.IsReadOnly = false;
                
			colvarNoteContent.DefaultSetting = @"";
			colvarNoteContent.ForeignKeyTableName = "";
            colvarNoteContent.ApplyExtendedProperties();
			this.Columns.Add(colvarNoteContent);
			
			TableSchema.TableColumn colvarNoteDate = new TableSchema.TableColumn(this);
			colvarNoteDate.ColumnName = "NoteDate";
			colvarNoteDate.DataType = DbType.DateTime;
			colvarNoteDate.MaxLength = 0;
			colvarNoteDate.AutoIncrement = false;
			colvarNoteDate.IsNullable = true;
			colvarNoteDate.IsPrimaryKey = false;
			colvarNoteDate.IsForeignKey = false;
			colvarNoteDate.IsReadOnly = false;
                
			colvarNoteDate.DefaultSetting = @"";
			colvarNoteDate.ForeignKeyTableName = "";
            colvarNoteDate.ApplyExtendedProperties();
			this.Columns.Add(colvarNoteDate);
			
			TableSchema.TableColumn colvarNoteStatus = new TableSchema.TableColumn(this);
			colvarNoteStatus.ColumnName = "NoteStatus";
			colvarNoteStatus.DataType = DbType.Int32;
			colvarNoteStatus.MaxLength = 0;
			colvarNoteStatus.AutoIncrement = false;
			colvarNoteStatus.IsNullable = false;
			colvarNoteStatus.IsPrimaryKey = false;
			colvarNoteStatus.IsForeignKey = false;
			colvarNoteStatus.IsReadOnly = false;
                
			colvarNoteStatus.DefaultSetting = @"";
			colvarNoteStatus.ForeignKeyTableName = "";
            colvarNoteStatus.ApplyExtendedProperties();
			this.Columns.Add(colvarNoteStatus);
			
			TableSchema.TableColumn colvarNoteHots = new TableSchema.TableColumn(this);
			colvarNoteHots.ColumnName = "NoteHots";
			colvarNoteHots.DataType = DbType.Int32;
			colvarNoteHots.MaxLength = 0;
			colvarNoteHots.AutoIncrement = false;
			colvarNoteHots.IsNullable = false;
			colvarNoteHots.IsPrimaryKey = false;
			colvarNoteHots.IsForeignKey = false;
			colvarNoteHots.IsReadOnly = false;
                
			colvarNoteHots.DefaultSetting = @"";
			colvarNoteHots.ForeignKeyTableName = "";
            colvarNoteHots.ApplyExtendedProperties();
			this.Columns.Add(colvarNoteHots);
			
			TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(this);
			colvarCreatedBy.ColumnName = "CreatedBy";
			colvarCreatedBy.DataType = DbType.Int32;
			colvarCreatedBy.MaxLength = 0;
			colvarCreatedBy.AutoIncrement = false;
			colvarCreatedBy.IsNullable = true;
			colvarCreatedBy.IsPrimaryKey = false;
			colvarCreatedBy.IsForeignKey = false;
			colvarCreatedBy.IsReadOnly = false;
                
			colvarCreatedBy.DefaultSetting = @"";
			colvarCreatedBy.ForeignKeyTableName = "";
            colvarCreatedBy.ApplyExtendedProperties();
			this.Columns.Add(colvarCreatedBy);
			
			TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(this);
			colvarCreatedOn.ColumnName = "CreatedOn";
			colvarCreatedOn.DataType = DbType.DateTime;
			colvarCreatedOn.MaxLength = 0;
			colvarCreatedOn.AutoIncrement = false;
			colvarCreatedOn.IsNullable = true;
			colvarCreatedOn.IsPrimaryKey = false;
			colvarCreatedOn.IsForeignKey = false;
			colvarCreatedOn.IsReadOnly = false;
                
			colvarCreatedOn.DefaultSetting = @"";
			colvarCreatedOn.ForeignKeyTableName = "";
            colvarCreatedOn.ApplyExtendedProperties();
			this.Columns.Add(colvarCreatedOn);
			
			TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(this);
			colvarModifiedBy.ColumnName = "ModifiedBy";
			colvarModifiedBy.DataType = DbType.Int32;
			colvarModifiedBy.MaxLength = 0;
			colvarModifiedBy.AutoIncrement = false;
			colvarModifiedBy.IsNullable = true;
			colvarModifiedBy.IsPrimaryKey = false;
			colvarModifiedBy.IsForeignKey = false;
			colvarModifiedBy.IsReadOnly = false;
                
			colvarModifiedBy.DefaultSetting = @"";
			colvarModifiedBy.ForeignKeyTableName = "";
            colvarModifiedBy.ApplyExtendedProperties();
			this.Columns.Add(colvarModifiedBy);
			
			TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(this);
			colvarModifiedOn.ColumnName = "ModifiedOn";
			colvarModifiedOn.DataType = DbType.DateTime;
			colvarModifiedOn.MaxLength = 0;
			colvarModifiedOn.AutoIncrement = false;
			colvarModifiedOn.IsNullable = true;
			colvarModifiedOn.IsPrimaryKey = false;
			colvarModifiedOn.IsForeignKey = false;
			colvarModifiedOn.IsReadOnly = false;
                
			colvarModifiedOn.DefaultSetting = @"";
			colvarModifiedOn.ForeignKeyTableName = "";
            colvarModifiedOn.ApplyExtendedProperties();
			this.Columns.Add(colvarModifiedOn);
			
		}
		#endregion
	}
}