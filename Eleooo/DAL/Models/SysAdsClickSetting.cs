using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
	/// <summary>
	/// Strongly-typed collection for the SysAdsClickSetting class.
	/// </summary>
    [Serializable]
	public partial class SysAdsClickSettingCollection : ActiveList<SysAdsClickSetting, SysAdsClickSettingCollection>
	{	   
		public SysAdsClickSettingCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysAdsClickSettingCollection</returns>
		public SysAdsClickSettingCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysAdsClickSetting o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_Ads_ClickSetting table.
	/// </summary>
	[Serializable]
	public partial class SysAdsClickSetting : ActiveRecord<SysAdsClickSetting>, IActiveRecord
	{
		#region .ctors and Default Settings
		static SysAdsClickSetting( )
        {
            BaseSchema = DB.GetSchema("Sys_Ads_ClickSetting");
        }
		public SysAdsClickSetting()
		{
		  //InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysAdsClickSetting(bool useDatabaseDefaults)
		{ 
            if(BaseSchema == null)
                BaseSchema = DB.GetSchema("Sys_Ads_ClickSetting");
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysAdsClickSetting(object keyID)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Ads_ClickSetting");
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysAdsClickSetting(string columnName, object columnValue)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Ads_ClickSetting");
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
                {
                    BaseSchema = DB.GetSchema("Sys_Ads_ClickSetting");
                }
				return BaseSchema;
			}
		}
		
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("OrderSumLimit")]
		[Bindable(true)]
		public decimal? OrderSumLimit 
		{
			get { return GetColumnValue<decimal?>(Columns.OrderSumLimit); }
			set { SetColumnValue(Columns.OrderSumLimit, value); }
		}
		  
		[XmlAttribute("ClickCountLimit")]
		[Bindable(true)]
		public int? ClickCountLimit 
		{
			get { return GetColumnValue<int?>(Columns.ClickCountLimit); }
			set { SetColumnValue(Columns.ClickCountLimit, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal? varOrderSumLimit,int? varClickCountLimit)
		{
			SysAdsClickSetting item = new SysAdsClickSetting();
			
			item.OrderSumLimit = varOrderSumLimit;
			
			item.ClickCountLimit = varClickCountLimit;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,decimal? varOrderSumLimit,int? varClickCountLimit)
		{
			SysAdsClickSetting item = new SysAdsClickSetting();
			
				item.Id = varId;
			
				item.OrderSumLimit = varOrderSumLimit;
			
				item.ClickCountLimit = varClickCountLimit;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderSumLimitColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn ClickCountLimitColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string OrderSumLimit = @"OrderSumLimit";
			 public static string ClickCountLimit = @"ClickCountLimit";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
