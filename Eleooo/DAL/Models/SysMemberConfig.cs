using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Eleooo.DAL
{
	/// <summary>
	/// Strongly-typed collection for the SysMemberConfig class.
	/// </summary>
    [Serializable]
	public partial class SysMemberConfigCollection : ActiveList<SysMemberConfig, SysMemberConfigCollection>
	{	   
		public SysMemberConfigCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysMemberConfigCollection</returns>
		public SysMemberConfigCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysMemberConfig o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_Member_Config table.
	/// </summary>
	[Serializable]
	public partial class SysMemberConfig : ActiveRecord<SysMemberConfig>, IActiveRecord
	{
		#region .ctors and Default Settings
		static SysMemberConfig( )
        {
            BaseSchema = DB.GetSchema("Sys_Member_Config");
        }
		public SysMemberConfig()
		{
		  //InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysMemberConfig(bool useDatabaseDefaults)
		{ 
            if(BaseSchema == null)
                BaseSchema = DB.GetSchema("Sys_Member_Config");
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysMemberConfig(object keyID)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Member_Config");
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysMemberConfig(string columnName, object columnValue)
		{ 
            if(BaseSchema == null) 
                BaseSchema = DB.GetSchema("Sys_Member_Config");
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
                {
                    BaseSchema = DB.GetSchema("Sys_Member_Config");
                }
				return BaseSchema;
			}
		}
		
		#endregion
		
		#region Props
		  
		[XmlAttribute("MemberId")]
		[Bindable(true)]
		public int MemberId 
		{
			get { return GetColumnValue<int>(Columns.MemberId); }
			set { SetColumnValue(Columns.MemberId, value); }
		}
		  
		[XmlAttribute("AreaModifyDate")]
		[Bindable(true)]
		public DateTime? AreaModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.AreaModifyDate); }
			set { SetColumnValue(Columns.AreaModifyDate, value); }
		}
		  
		[XmlAttribute("AreaModifyCount")]
		[Bindable(true)]
		public int? AreaModifyCount 
		{
			get { return GetColumnValue<int?>(Columns.AreaModifyCount); }
			set { SetColumnValue(Columns.AreaModifyCount, value); }
		}
		  
		[XmlAttribute("MyFavCompany")]
		[Bindable(true)]
		public string MyFavCompany 
		{
			get { return GetColumnValue<string>(Columns.MyFavCompany); }
			set { SetColumnValue(Columns.MyFavCompany, value); }
		}
		  
		[XmlAttribute("MyAddress")]
		[Bindable(true)]
		public string MyAddress 
		{
			get { return GetColumnValue<string>(Columns.MyAddress); }
			set { SetColumnValue(Columns.MyAddress, value); }
		}
		  
		[XmlAttribute("MyRecItems")]
		[Bindable(true)]
		public string MyRecItems 
		{
			get { return GetColumnValue<string>(Columns.MyRecItems); }
			set { SetColumnValue(Columns.MyRecItems, value); }
		}
		  
		[XmlAttribute("MyRecAds")]
		[Bindable(true)]
		public string MyRecAds 
		{
			get { return GetColumnValue<string>(Columns.MyRecAds); }
			set { SetColumnValue(Columns.MyRecAds, value); }
		}
		  
		[XmlAttribute("MsnPwdCount")]
		[Bindable(true)]
		public int? MsnPwdCount 
		{
			get { return GetColumnValue<int?>(Columns.MsnPwdCount); }
			set { SetColumnValue(Columns.MsnPwdCount, value); }
		}
		  
		[XmlAttribute("Area2ModifyDate")]
		[Bindable(true)]
		public DateTime? Area2ModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.Area2ModifyDate); }
			set { SetColumnValue(Columns.Area2ModifyDate, value); }
		}
		  
		[XmlAttribute("PhoneModifyDate")]
		[Bindable(true)]
		public DateTime? PhoneModifyDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PhoneModifyDate); }
			set { SetColumnValue(Columns.PhoneModifyDate, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varMemberId,DateTime? varAreaModifyDate,int? varAreaModifyCount,string varMyFavCompany,string varMyAddress,string varMyRecItems,string varMyRecAds,int? varMsnPwdCount,DateTime? varArea2ModifyDate,DateTime? varPhoneModifyDate)
		{
			SysMemberConfig item = new SysMemberConfig();
			
			item.MemberId = varMemberId;
			
			item.AreaModifyDate = varAreaModifyDate;
			
			item.AreaModifyCount = varAreaModifyCount;
			
			item.MyFavCompany = varMyFavCompany;
			
			item.MyAddress = varMyAddress;
			
			item.MyRecItems = varMyRecItems;
			
			item.MyRecAds = varMyRecAds;
			
			item.MsnPwdCount = varMsnPwdCount;
			
			item.Area2ModifyDate = varArea2ModifyDate;
			
			item.PhoneModifyDate = varPhoneModifyDate;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varMemberId,DateTime? varAreaModifyDate,int? varAreaModifyCount,string varMyFavCompany,string varMyAddress,string varMyRecItems,string varMyRecAds,int? varMsnPwdCount,DateTime? varArea2ModifyDate,DateTime? varPhoneModifyDate)
		{
			SysMemberConfig item = new SysMemberConfig();
			
				item.MemberId = varMemberId;
			
				item.AreaModifyDate = varAreaModifyDate;
			
				item.AreaModifyCount = varAreaModifyCount;
			
				item.MyFavCompany = varMyFavCompany;
			
				item.MyAddress = varMyAddress;
			
				item.MyRecItems = varMyRecItems;
			
				item.MyRecAds = varMyRecAds;
			
				item.MsnPwdCount = varMsnPwdCount;
			
				item.Area2ModifyDate = varArea2ModifyDate;
			
				item.PhoneModifyDate = varPhoneModifyDate;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MemberIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn AreaModifyDateColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn AreaModifyCountColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MyFavCompanyColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MyAddressColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MyRecItemsColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MyRecAdsColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MsnPwdCountColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn Area2ModifyDateColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PhoneModifyDateColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MemberId = @"MemberId";
			 public static string AreaModifyDate = @"AreaModifyDate";
			 public static string AreaModifyCount = @"AreaModifyCount";
			 public static string MyFavCompany = @"MyFavCompany";
			 public static string MyAddress = @"MyAddress";
			 public static string MyRecItems = @"MyRecItems";
			 public static string MyRecAds = @"MyRecAds";
			 public static string MsnPwdCount = @"MsnPwdCount";
			 public static string Area2ModifyDate = @"Area2ModifyDate";
			 public static string PhoneModifyDate = @"PhoneModifyDate";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
