//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace Eleooo.Client.WebServiceProvider {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebRestServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebRestService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClientLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberFingerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberForOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberForCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableByParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCompanyAdForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrderForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCashForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenCompanyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsOwnerUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCompanyItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderCompanyItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebRestService() {
            this.Url = global::Eleooo.Client.Properties.Settings.Default.ServiceUrl;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClientLoginCompletedEventHandler ClientLoginCompleted;
        
        /// <remarks/>
        public event GetMemberInfoCompletedEventHandler GetMemberInfoCompleted;
        
        /// <remarks/>
        public event GetMemberFingerCompletedEventHandler GetMemberFingerCompleted;
        
        /// <remarks/>
        public event GetMemberForOrderCompletedEventHandler GetMemberForOrderCompleted;
        
        /// <remarks/>
        public event GetMemberForCashCompletedEventHandler GetMemberForCashCompleted;
        
        /// <remarks/>
        public event GetDataTableCompletedEventHandler GetDataTableCompleted;
        
        /// <remarks/>
        public event GetDataTableByParamCompletedEventHandler GetDataTableByParamCompleted;
        
        /// <remarks/>
        public event ExecuteQueryCompletedEventHandler ExecuteQueryCompleted;
        
        /// <remarks/>
        public event ExecuteScalarCompletedEventHandler ExecuteScalarCompleted;
        
        /// <remarks/>
        public event SaveCompanyAdForClientCompletedEventHandler SaveCompanyAdForClientCompleted;
        
        /// <remarks/>
        public event SaveOrderForClientCompletedEventHandler SaveOrderForClientCompleted;
        
        /// <remarks/>
        public event SaveCashForClientCompletedEventHandler SaveCashForClientCompleted;
        
        /// <remarks/>
        public event GetCompanyInfoCompletedEventHandler GetCompanyInfoCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event GetSaveFileCompletedEventHandler GetSaveFileCompleted;
        
        /// <remarks/>
        public event GetGenCompanyCodeCompletedEventHandler GetGenCompanyCodeCompleted;
        
        /// <remarks/>
        public event IsOwnerUserCompletedEventHandler IsOwnerUserCompleted;
        
        /// <remarks/>
        public event GetUserCompanyItemsCompletedEventHandler GetUserCompanyItemsCompleted;
        
        /// <remarks/>
        public event OrderCompanyItemCompletedEventHandler OrderCompanyItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientLogin(string userName, string userPass, int subSys, out System.Data.DataTable loginUser) {
            object[] results = this.Invoke("ClientLogin", new object[] {
                        userName,
                        userPass,
                        subSys});
            loginUser = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientLoginAsync(string userName, string userPass, int subSys) {
            this.ClientLoginAsync(userName, userPass, subSys, null);
        }
        
        /// <remarks/>
        public void ClientLoginAsync(string userName, string userPass, int subSys, object userState) {
            if ((this.ClientLoginOperationCompleted == null)) {
                this.ClientLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientLoginOperationCompleted);
            }
            this.InvokeAsync("ClientLogin", new object[] {
                        userName,
                        userPass,
                        subSys}, this.ClientLoginOperationCompleted, userState);
        }
        
        private void OnClientLoginOperationCompleted(object arg) {
            if ((this.ClientLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientLoginCompleted(this, new ClientLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMemberInfo(int id, string phoneNum) {
            this.Invoke("GetMemberInfo", new object[] {
                        id,
                        phoneNum});
        }
        
        /// <remarks/>
        public void GetMemberInfoAsync(int id, string phoneNum) {
            this.GetMemberInfoAsync(id, phoneNum, null);
        }
        
        /// <remarks/>
        public void GetMemberInfoAsync(int id, string phoneNum, object userState) {
            if ((this.GetMemberInfoOperationCompleted == null)) {
                this.GetMemberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberInfoOperationCompleted);
            }
            this.InvokeAsync("GetMemberInfo", new object[] {
                        id,
                        phoneNum}, this.GetMemberInfoOperationCompleted, userState);
        }
        
        private void OnGetMemberInfoOperationCompleted(object arg) {
            if ((this.GetMemberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberFinger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberFinger(int id, string phoneNum) {
            object[] results = this.Invoke("GetMemberFinger", new object[] {
                        id,
                        phoneNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberFingerAsync(int id, string phoneNum) {
            this.GetMemberFingerAsync(id, phoneNum, null);
        }
        
        /// <remarks/>
        public void GetMemberFingerAsync(int id, string phoneNum, object userState) {
            if ((this.GetMemberFingerOperationCompleted == null)) {
                this.GetMemberFingerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberFingerOperationCompleted);
            }
            this.InvokeAsync("GetMemberFinger", new object[] {
                        id,
                        phoneNum}, this.GetMemberFingerOperationCompleted, userState);
        }
        
        private void OnGetMemberFingerOperationCompleted(object arg) {
            if ((this.GetMemberFingerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberFingerCompleted(this, new GetMemberFingerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberForOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMemberForOrder(int id, string phoneNum, out System.Data.DataTable dtUser, out System.Data.DataTable dtUserInfo, out System.Data.DataTable dtUserCash, out string message) {
            object[] results = this.Invoke("GetMemberForOrder", new object[] {
                        id,
                        phoneNum});
            dtUser = ((System.Data.DataTable)(results[1]));
            dtUserInfo = ((System.Data.DataTable)(results[2]));
            dtUserCash = ((System.Data.DataTable)(results[3]));
            message = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberForOrderAsync(int id, string phoneNum) {
            this.GetMemberForOrderAsync(id, phoneNum, null);
        }
        
        /// <remarks/>
        public void GetMemberForOrderAsync(int id, string phoneNum, object userState) {
            if ((this.GetMemberForOrderOperationCompleted == null)) {
                this.GetMemberForOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberForOrderOperationCompleted);
            }
            this.InvokeAsync("GetMemberForOrder", new object[] {
                        id,
                        phoneNum}, this.GetMemberForOrderOperationCompleted, userState);
        }
        
        private void OnGetMemberForOrderOperationCompleted(object arg) {
            if ((this.GetMemberForOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberForOrderCompleted(this, new GetMemberForOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberForCash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMemberForCash(int id, string phoneNum, out System.Data.DataTable dtUser, out System.Data.DataTable dtUserInfo, out string message) {
            object[] results = this.Invoke("GetMemberForCash", new object[] {
                        id,
                        phoneNum});
            dtUser = ((System.Data.DataTable)(results[1]));
            dtUserInfo = ((System.Data.DataTable)(results[2]));
            message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberForCashAsync(int id, string phoneNum) {
            this.GetMemberForCashAsync(id, phoneNum, null);
        }
        
        /// <remarks/>
        public void GetMemberForCashAsync(int id, string phoneNum, object userState) {
            if ((this.GetMemberForCashOperationCompleted == null)) {
                this.GetMemberForCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberForCashOperationCompleted);
            }
            this.InvokeAsync("GetMemberForCash", new object[] {
                        id,
                        phoneNum}, this.GetMemberForCashOperationCompleted, userState);
        }
        
        private void OnGetMemberForCashOperationCompleted(object arg) {
            if ((this.GetMemberForCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberForCashCompleted(this, new GetMemberForCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataTable(string cmdSql) {
            object[] results = this.Invoke("GetDataTable", new object[] {
                        cmdSql});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string cmdSql) {
            this.GetDataTableAsync(cmdSql, null);
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string cmdSql, object userState) {
            if ((this.GetDataTableOperationCompleted == null)) {
                this.GetDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDataTable", new object[] {
                        cmdSql}, this.GetDataTableOperationCompleted, userState);
        }
        
        private void OnGetDataTableOperationCompleted(object arg) {
            if ((this.GetDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompleted(this, new GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTableByParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataTableByParam(string cmdSql, System.Data.DataTable cmdParam) {
            object[] results = this.Invoke("GetDataTableByParam", new object[] {
                        cmdSql,
                        cmdParam});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableByParamAsync(string cmdSql, System.Data.DataTable cmdParam) {
            this.GetDataTableByParamAsync(cmdSql, cmdParam, null);
        }
        
        /// <remarks/>
        public void GetDataTableByParamAsync(string cmdSql, System.Data.DataTable cmdParam, object userState) {
            if ((this.GetDataTableByParamOperationCompleted == null)) {
                this.GetDataTableByParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableByParamOperationCompleted);
            }
            this.InvokeAsync("GetDataTableByParam", new object[] {
                        cmdSql,
                        cmdParam}, this.GetDataTableByParamOperationCompleted, userState);
        }
        
        private void OnGetDataTableByParamOperationCompleted(object arg) {
            if ((this.GetDataTableByParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableByParamCompleted(this, new GetDataTableByParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteQuery(string cmdSql, System.Data.DataTable cmdParam) {
            object[] results = this.Invoke("ExecuteQuery", new object[] {
                        cmdSql,
                        cmdParam});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string cmdSql, System.Data.DataTable cmdParam) {
            this.ExecuteQueryAsync(cmdSql, cmdParam, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string cmdSql, System.Data.DataTable cmdParam, object userState) {
            if ((this.ExecuteQueryOperationCompleted == null)) {
                this.ExecuteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteQuery", new object[] {
                        cmdSql,
                        cmdParam}, this.ExecuteQueryOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOperationCompleted(object arg) {
            if ((this.ExecuteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteScalar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object ExecuteScalar(string cmdSql, System.Data.DataTable cmdParam) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        cmdSql,
                        cmdParam});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string cmdSql, System.Data.DataTable cmdParam) {
            this.ExecuteScalarAsync(cmdSql, cmdParam, null);
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string cmdSql, System.Data.DataTable cmdParam, object userState) {
            if ((this.ExecuteScalarOperationCompleted == null)) {
                this.ExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar", new object[] {
                        cmdSql,
                        cmdParam}, this.ExecuteScalarOperationCompleted, userState);
        }
        
        private void OnExecuteScalarOperationCompleted(object arg) {
            if ((this.ExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCompanyAdForClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveCompanyAdForClient(System.Data.DataTable dtCompanyAd, System.Data.DataTable dtPointSetting, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileName, out int adsID, out string message) {
            object[] results = this.Invoke("SaveCompanyAdForClient", new object[] {
                        dtCompanyAd,
                        dtPointSetting,
                        fileData,
                        fileName});
            adsID = ((int)(results[1]));
            message = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCompanyAdForClientAsync(System.Data.DataTable dtCompanyAd, System.Data.DataTable dtPointSetting, byte[] fileData, string fileName) {
            this.SaveCompanyAdForClientAsync(dtCompanyAd, dtPointSetting, fileData, fileName, null);
        }
        
        /// <remarks/>
        public void SaveCompanyAdForClientAsync(System.Data.DataTable dtCompanyAd, System.Data.DataTable dtPointSetting, byte[] fileData, string fileName, object userState) {
            if ((this.SaveCompanyAdForClientOperationCompleted == null)) {
                this.SaveCompanyAdForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCompanyAdForClientOperationCompleted);
            }
            this.InvokeAsync("SaveCompanyAdForClient", new object[] {
                        dtCompanyAd,
                        dtPointSetting,
                        fileData,
                        fileName}, this.SaveCompanyAdForClientOperationCompleted, userState);
        }
        
        private void OnSaveCompanyAdForClientOperationCompleted(object arg) {
            if ((this.SaveCompanyAdForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompanyAdForClientCompleted(this, new SaveCompanyAdForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderForClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveOrderForClient(System.Data.DataTable dtOrder, int userID, string userPwd, out string message) {
            object[] results = this.Invoke("SaveOrderForClient", new object[] {
                        dtOrder,
                        userID,
                        userPwd});
            message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrderForClientAsync(System.Data.DataTable dtOrder, int userID, string userPwd) {
            this.SaveOrderForClientAsync(dtOrder, userID, userPwd, null);
        }
        
        /// <remarks/>
        public void SaveOrderForClientAsync(System.Data.DataTable dtOrder, int userID, string userPwd, object userState) {
            if ((this.SaveOrderForClientOperationCompleted == null)) {
                this.SaveOrderForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrderForClientOperationCompleted);
            }
            this.InvokeAsync("SaveOrderForClient", new object[] {
                        dtOrder,
                        userID,
                        userPwd}, this.SaveOrderForClientOperationCompleted, userState);
        }
        
        private void OnSaveOrderForClientOperationCompleted(object arg) {
            if ((this.SaveOrderForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrderForClientCompleted(this, new SaveOrderForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCashForClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCashForClient(System.Data.DataTable dtCash, int userID, out string message) {
            object[] results = this.Invoke("SaveCashForClient", new object[] {
                        dtCash,
                        userID});
            message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCashForClientAsync(System.Data.DataTable dtCash, int userID) {
            this.SaveCashForClientAsync(dtCash, userID, null);
        }
        
        /// <remarks/>
        public void SaveCashForClientAsync(System.Data.DataTable dtCash, int userID, object userState) {
            if ((this.SaveCashForClientOperationCompleted == null)) {
                this.SaveCashForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCashForClientOperationCompleted);
            }
            this.InvokeAsync("SaveCashForClient", new object[] {
                        dtCash,
                        userID}, this.SaveCashForClientOperationCompleted, userState);
        }
        
        private void OnSaveCashForClientOperationCompleted(object arg) {
            if ((this.SaveCashForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCashForClientCompleted(this, new SaveCashForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCompanyInfo(int companyID) {
            object[] results = this.Invoke("GetCompanyInfo", new object[] {
                        companyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyInfoAsync(int companyID) {
            this.GetCompanyInfoAsync(companyID, null);
        }
        
        /// <remarks/>
        public void GetCompanyInfoAsync(int companyID, object userState) {
            if ((this.GetCompanyInfoOperationCompleted == null)) {
                this.GetCompanyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyInfoOperationCompleted);
            }
            this.InvokeAsync("GetCompanyInfo", new object[] {
                        companyID}, this.GetCompanyInfoOperationCompleted, userState);
        }
        
        private void OnGetCompanyInfoOperationCompleted(object arg) {
            if ((this.GetCompanyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyInfoCompleted(this, new GetCompanyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData, string fileName, int fileType, int saveType, string folderName, out string message) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        fileData,
                        fileName,
                        fileType,
                        saveType,
                        folderName});
            message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] fileData, string fileName, int fileType, int saveType, string folderName) {
            this.UploadFileAsync(fileData, fileName, fileType, saveType, folderName, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] fileData, string fileName, int fileType, int saveType, string folderName, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        fileData,
                        fileName,
                        fileType,
                        saveType,
                        folderName}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSaveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSaveFile(string fileName, int saveType) {
            object[] results = this.Invoke("GetSaveFile", new object[] {
                        fileName,
                        saveType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSaveFileAsync(string fileName, int saveType) {
            this.GetSaveFileAsync(fileName, saveType, null);
        }
        
        /// <remarks/>
        public void GetSaveFileAsync(string fileName, int saveType, object userState) {
            if ((this.GetSaveFileOperationCompleted == null)) {
                this.GetSaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaveFileOperationCompleted);
            }
            this.InvokeAsync("GetSaveFile", new object[] {
                        fileName,
                        saveType}, this.GetSaveFileOperationCompleted, userState);
        }
        
        private void OnGetSaveFileOperationCompleted(object arg) {
            if ((this.GetSaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaveFileCompleted(this, new GetSaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGenCompanyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGenCompanyCode(int areaID) {
            object[] results = this.Invoke("GetGenCompanyCode", new object[] {
                        areaID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenCompanyCodeAsync(int areaID) {
            this.GetGenCompanyCodeAsync(areaID, null);
        }
        
        /// <remarks/>
        public void GetGenCompanyCodeAsync(int areaID, object userState) {
            if ((this.GetGenCompanyCodeOperationCompleted == null)) {
                this.GetGenCompanyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenCompanyCodeOperationCompleted);
            }
            this.InvokeAsync("GetGenCompanyCode", new object[] {
                        areaID}, this.GetGenCompanyCodeOperationCompleted, userState);
        }
        
        private void OnGetGenCompanyCodeOperationCompleted(object arg) {
            if ((this.GetGenCompanyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenCompanyCodeCompleted(this, new GetGenCompanyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsOwnerUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOwnerUser(int userID, int companyID) {
            object[] results = this.Invoke("IsOwnerUser", new object[] {
                        userID,
                        companyID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsOwnerUserAsync(int userID, int companyID) {
            this.IsOwnerUserAsync(userID, companyID, null);
        }
        
        /// <remarks/>
        public void IsOwnerUserAsync(int userID, int companyID, object userState) {
            if ((this.IsOwnerUserOperationCompleted == null)) {
                this.IsOwnerUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOwnerUserOperationCompleted);
            }
            this.InvokeAsync("IsOwnerUser", new object[] {
                        userID,
                        companyID}, this.IsOwnerUserOperationCompleted, userState);
        }
        
        private void OnIsOwnerUserOperationCompleted(object arg) {
            if ((this.IsOwnerUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOwnerUserCompleted(this, new IsOwnerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCompanyItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetUserCompanyItems(string phoneNum, string userPwd, string userFinger, int companyID, out int flag, out string message) {
            object[] results = this.Invoke("GetUserCompanyItems", new object[] {
                        phoneNum,
                        userPwd,
                        userFinger,
                        companyID});
            flag = ((int)(results[1]));
            message = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCompanyItemsAsync(string phoneNum, string userPwd, string userFinger, int companyID) {
            this.GetUserCompanyItemsAsync(phoneNum, userPwd, userFinger, companyID, null);
        }
        
        /// <remarks/>
        public void GetUserCompanyItemsAsync(string phoneNum, string userPwd, string userFinger, int companyID, object userState) {
            if ((this.GetUserCompanyItemsOperationCompleted == null)) {
                this.GetUserCompanyItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCompanyItemsOperationCompleted);
            }
            this.InvokeAsync("GetUserCompanyItems", new object[] {
                        phoneNum,
                        userPwd,
                        userFinger,
                        companyID}, this.GetUserCompanyItemsOperationCompleted, userState);
        }
        
        private void OnGetUserCompanyItemsOperationCompleted(object arg) {
            if ((this.GetUserCompanyItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompanyItemsCompleted(this, new GetUserCompanyItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderCompanyItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OrderCompanyItem(int companyID, int itemID, string MemberPwd, string MemberFinger, out string message) {
            object[] results = this.Invoke("OrderCompanyItem", new object[] {
                        companyID,
                        itemID,
                        MemberPwd,
                        MemberFinger});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrderCompanyItemAsync(int companyID, int itemID, string MemberPwd, string MemberFinger) {
            this.OrderCompanyItemAsync(companyID, itemID, MemberPwd, MemberFinger, null);
        }
        
        /// <remarks/>
        public void OrderCompanyItemAsync(int companyID, int itemID, string MemberPwd, string MemberFinger, object userState) {
            if ((this.OrderCompanyItemOperationCompleted == null)) {
                this.OrderCompanyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderCompanyItemOperationCompleted);
            }
            this.InvokeAsync("OrderCompanyItem", new object[] {
                        companyID,
                        itemID,
                        MemberPwd,
                        MemberFinger}, this.OrderCompanyItemOperationCompleted, userState);
        }
        
        private void OnOrderCompanyItemOperationCompleted(object arg) {
            if ((this.OrderCompanyItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCompanyItemCompleted(this, new OrderCompanyItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClientLoginCompletedEventHandler(object sender, ClientLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable loginUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberFingerCompletedEventHandler(object sender, GetMemberFingerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberFingerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberFingerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberForOrderCompletedEventHandler(object sender, GetMemberForOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberForOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberForOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUserInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUserCash {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemberForCashCompletedEventHandler(object sender, GetMemberForCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberForCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberForCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtUserInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataTableCompletedEventHandler(object sender, GetDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataTableByParamCompletedEventHandler(object sender, GetDataTableByParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableByParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableByParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteQueryCompletedEventHandler(object sender, ExecuteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteScalarCompletedEventHandler(object sender, ExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCompanyAdForClientCompletedEventHandler(object sender, SaveCompanyAdForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompanyAdForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompanyAdForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int adsID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveOrderForClientCompletedEventHandler(object sender, SaveOrderForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrderForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrderForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCashForClientCompletedEventHandler(object sender, SaveCashForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCashForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCashForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompanyInfoCompletedEventHandler(object sender, GetCompanyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSaveFileCompletedEventHandler(object sender, GetSaveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGenCompanyCodeCompletedEventHandler(object sender, GetGenCompanyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenCompanyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenCompanyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsOwnerUserCompletedEventHandler(object sender, IsOwnerUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOwnerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOwnerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserCompanyItemsCompletedEventHandler(object sender, GetUserCompanyItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompanyItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompanyItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int flag {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OrderCompanyItemCompletedEventHandler(object sender, OrderCompanyItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderCompanyItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderCompanyItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591